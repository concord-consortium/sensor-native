/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ccsd.vernier;

class NativeBridgeJNI {
  public final static native void SensorParam_key_set(long jarg1, SensorParam jarg1_, String jarg2);
  public final static native String SensorParam_key_get(long jarg1, SensorParam jarg1_);
  public final static native void SensorParam_value_set(long jarg1, SensorParam jarg1_, String jarg2);
  public final static native String SensorParam_value_get(long jarg1, SensorParam jarg1_);
  public final static native long new_SensorParam();
  public final static native void delete_SensorParam(long jarg1);
  public final static native void SensorConfig_confirmed_set(long jarg1, SensorConfig jarg1_, short jarg2);
  public final static native short SensorConfig_confirmed_get(long jarg1, SensorConfig jarg1_);
  public final static native void SensorConfig_type_set(long jarg1, SensorConfig jarg1_, int jarg2);
  public final static native int SensorConfig_type_get(long jarg1, SensorConfig jarg1_);
  public final static native void SensorConfig_stepSize_set(long jarg1, SensorConfig jarg1_, float jarg2);
  public final static native float SensorConfig_stepSize_get(long jarg1, SensorConfig jarg1_);
  public final static native void SensorConfig_requiredMax_set(long jarg1, SensorConfig jarg1_, float jarg2);
  public final static native float SensorConfig_requiredMax_get(long jarg1, SensorConfig jarg1_);
  public final static native void SensorConfig_requiredMin_set(long jarg1, SensorConfig jarg1_, float jarg2);
  public final static native float SensorConfig_requiredMin_get(long jarg1, SensorConfig jarg1_);
  public final static native void SensorConfig_port_set(long jarg1, SensorConfig jarg1_, int jarg2);
  public final static native int SensorConfig_port_get(long jarg1, SensorConfig jarg1_);
  public final static native void SensorConfig_portName_set(long jarg1, SensorConfig jarg1_, String jarg2);
  public final static native String SensorConfig_portName_get(long jarg1, SensorConfig jarg1_);
  public final static native void SensorConfig_name_set(long jarg1, SensorConfig jarg1_, String jarg2);
  public final static native String SensorConfig_name_get(long jarg1, SensorConfig jarg1_);
  public final static native void SensorConfig_unitStr_set(long jarg1, SensorConfig jarg1_, String jarg2);
  public final static native String SensorConfig_unitStr_get(long jarg1, SensorConfig jarg1_);
  public final static native void SensorConfig_numSensorParams_set(long jarg1, SensorConfig jarg1_, int jarg2);
  public final static native int SensorConfig_numSensorParams_get(long jarg1, SensorConfig jarg1_);
  public final static native void SensorConfig_sensorParams_set(long jarg1, SensorConfig jarg1_, long jarg2, SensorParam jarg2_);
  public final static native long SensorConfig_sensorParams_get(long jarg1, SensorConfig jarg1_);
  public final static native String SensorConfig_getSensorParam(long jarg1, SensorConfig jarg1_, String jarg2);
  public final static native long new_SensorConfig();
  public final static native void delete_SensorConfig(long jarg1);
  public final static native void ExperimentConfig_valid_set(long jarg1, ExperimentConfig jarg1_, short jarg2);
  public final static native short ExperimentConfig_valid_get(long jarg1, ExperimentConfig jarg1_);
  public final static native void ExperimentConfig_invalidReason_set(long jarg1, ExperimentConfig jarg1_, String jarg2);
  public final static native String ExperimentConfig_invalidReason_get(long jarg1, ExperimentConfig jarg1_);
  public final static native void ExperimentConfig_period_set(long jarg1, ExperimentConfig jarg1_, float jarg2);
  public final static native float ExperimentConfig_period_get(long jarg1, ExperimentConfig jarg1_);
  public final static native void ExperimentConfig_exactPeriodUChar_set(long jarg1, ExperimentConfig jarg1_, short jarg2);
  public final static native short ExperimentConfig_exactPeriodUChar_get(long jarg1, ExperimentConfig jarg1_);
  public final static native void ExperimentConfig_numberOfSamples_set(long jarg1, ExperimentConfig jarg1_, int jarg2);
  public final static native int ExperimentConfig_numberOfSamples_get(long jarg1, ExperimentConfig jarg1_);
  public final static native void ExperimentConfig_dataReadPeriod_set(long jarg1, ExperimentConfig jarg1_, float jarg2);
  public final static native float ExperimentConfig_dataReadPeriod_get(long jarg1, ExperimentConfig jarg1_);
  public final static native void ExperimentConfig_deviceName_set(long jarg1, ExperimentConfig jarg1_, String jarg2);
  public final static native String ExperimentConfig_deviceName_get(long jarg1, ExperimentConfig jarg1_);
  public final static native void ExperimentConfig_numSensorConfigs_set(long jarg1, ExperimentConfig jarg1_, int jarg2);
  public final static native int ExperimentConfig_numSensorConfigs_get(long jarg1, ExperimentConfig jarg1_);
  public final static native void ExperimentConfig_sensorConfigArray_set(long jarg1, ExperimentConfig jarg1_, long jarg2, SensorConfig jarg2_);
  public final static native long ExperimentConfig_sensorConfigArray_get(long jarg1, ExperimentConfig jarg1_);
  public final static native long ExperimentConfig_getSensorConfig(long jarg1, ExperimentConfig jarg1_, int jarg2);
  public final static native void ExperimentConfig_createSensorConfigArray(long jarg1, ExperimentConfig jarg1_, int jarg2);
  public final static native void ExperimentConfig_setSensorConfig(long jarg1, ExperimentConfig jarg1_, long jarg2, SensorConfig jarg2_, int jarg3);
  public final static native long new_ExperimentConfig();
  public final static native void delete_ExperimentConfig(long jarg1);
  public final static native int QUANTITY_UNKNOWN_get();
  public final static native long SensDev_open(String jarg1);
  public final static native int SensDev_close(long jarg1);
  public final static native int SensDev_isAttached(long jarg1);
  public final static native int SensDev_configure(long jarg1, long jarg2, ExperimentConfig jarg2_, long jarg3);
  public final static native int SensDev_canDetectSensors(long jarg1);
  public final static native int SensDev_getCurrentConfig(long jarg1, long jarg2);
  public final static native int SensDev_start(long jarg1);
  public final static native int SensDev_stop(long jarg1);
  public final static native int SensDev_read(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long getCurrentConfigHelper(long jarg1);
  public final static native long configureHelper(long jarg1, long jarg2, ExperimentConfig jarg2_);
  public final static native long new_floatArray(int jarg1);
  public final static native void delete_floatArray(long jarg1);
  public final static native float floatArray_getitem(long jarg1, int jarg2);
  public final static native void floatArray_setitem(long jarg1, int jarg2, float jarg3);
}
