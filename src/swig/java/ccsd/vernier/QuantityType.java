/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ccsd.vernier;

public final class QuantityType {
  public final static QuantityType QUANTITY_UNKNOWN = new QuantityType("QUANTITY_UNKNOWN", NativeBridgeJNI.QUANTITY_UNKNOWN_get());
  public final static QuantityType QUANTITY_TEMPERATURE = new QuantityType("QUANTITY_TEMPERATURE");
  public final static QuantityType QUANTITY_TEMPERATURE_WAND = new QuantityType("QUANTITY_TEMPERATURE_WAND");
  public final static QuantityType QUANTITY_LIGHT = new QuantityType("QUANTITY_LIGHT");
  public final static QuantityType QUANTITY_GAS_PRESSURE = new QuantityType("QUANTITY_GAS_PRESSURE");
  public final static QuantityType QUANTITY_VOLTAGE = new QuantityType("QUANTITY_VOLTAGE");
  public final static QuantityType QUANTITY_FORCE = new QuantityType("QUANTITY_FORCE");
  public final static QuantityType QUANTITY_VELOCITY = new QuantityType("QUANTITY_VELOCITY");
  public final static QuantityType QUANTITY_RELATIVE_HUMIDITY = new QuantityType("QUANTITY_RELATIVE_HUMIDITY");
  public final static QuantityType QUANTITY_ACCELERATION = new QuantityType("QUANTITY_ACCELERATION");
  public final static QuantityType QUANTITY_PULSE_RATE = new QuantityType("QUANTITY_PULSE_RATE");
  public final static QuantityType QUANTITY_CURRENT = new QuantityType("QUANTITY_CURRENT");
  public final static QuantityType QUANTITY_POWER = new QuantityType("QUANTITY_POWER");
  public final static QuantityType QUANTITY_ENERGY = new QuantityType("QUANTITY_ENERGY");
  public final static QuantityType QUANTITY_DISTANCE = new QuantityType("QUANTITY_DISTANCE");
  public final static QuantityType QUANTITY_SOUND_INTENSITY = new QuantityType("QUANTITY_SOUND_INTENSITY");
  public final static QuantityType QUANTITY_COMPASS = new QuantityType("QUANTITY_COMPASS");
  public final static QuantityType QUANTITY_ANGULAR_VELOCITY = new QuantityType("QUANTITY_ANGULAR_VELOCITY");
  public final static QuantityType QUANTITY_WIND_SPEED = new QuantityType("QUANTITY_WIND_SPEED");
  public final static QuantityType QUANTITY_CO2_GAS = new QuantityType("QUANTITY_CO2_GAS");
  public final static QuantityType QUANTITY_OXYGEN_GAS = new QuantityType("QUANTITY_OXYGEN_GAS");
  public final static QuantityType QUANTITY_PH = new QuantityType("QUANTITY_PH");
  public final static QuantityType QUANTITY_SALINITY = new QuantityType("QUANTITY_SALINITY");
  public final static QuantityType QUANTITY_RAW_DATA = new QuantityType("QUANTITY_RAW_DATA");
  public final static QuantityType QUANTITY_RAW_VOLTAGE = new QuantityType("QUANTITY_RAW_VOLTAGE");
  public final static QuantityType QUANTITY_RAW_DATA_2 = new QuantityType("QUANTITY_RAW_DATA_2");
  public final static QuantityType QUANTITY_RAW_VOLTAGE_2 = new QuantityType("QUANTITY_RAW_VOLTAGE_2");
  public final static QuantityType QUANTITY_MAGNETIC_FIELD = new QuantityType("QUANTITY_MAGNETIC_FIELD");
  public final static QuantityType QUANTITY_LUNG_AIR_FLOW = new QuantityType("QUANTITY_LUNG_AIR_FLOW");
  public final static QuantityType QUANTITY_HEART_RATE_SIGNAL = new QuantityType("QUANTITY_HEART_RATE_SIGNAL");
  public final static QuantityType QUANTITY_EKG = new QuantityType("QUANTITY_EKG");
  public final static QuantityType QUANTITY_BLOOD_PRESSURE = new QuantityType("QUANTITY_BLOOD_PRESSURE");
  public final static QuantityType QUANTITY_CONDUCTIVITY = new QuantityType("QUANTITY_CONDUCTIVITY");
  public final static QuantityType QUANTITY_DISSOLVED_OXYGEN = new QuantityType("QUANTITY_DISSOLVED_OXYGEN");
  public final static QuantityType QUANTITY_COLORIMETER = new QuantityType("QUANTITY_COLORIMETER");
  public final static QuantityType QUANTITY_HAND_DYNAMOMETER = new QuantityType("QUANTITY_HAND_DYNAMOMETER");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static QuantityType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + QuantityType.class + " with value " + swigValue);
  }

  private QuantityType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private QuantityType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private QuantityType(String swigName, QuantityType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static QuantityType[] swigValues = { QUANTITY_UNKNOWN, QUANTITY_TEMPERATURE, QUANTITY_TEMPERATURE_WAND, QUANTITY_LIGHT, QUANTITY_GAS_PRESSURE, QUANTITY_VOLTAGE, QUANTITY_FORCE, QUANTITY_VELOCITY, QUANTITY_RELATIVE_HUMIDITY, QUANTITY_ACCELERATION, QUANTITY_PULSE_RATE, QUANTITY_CURRENT, QUANTITY_POWER, QUANTITY_ENERGY, QUANTITY_DISTANCE, QUANTITY_SOUND_INTENSITY, QUANTITY_COMPASS, QUANTITY_ANGULAR_VELOCITY, QUANTITY_WIND_SPEED, QUANTITY_CO2_GAS, QUANTITY_OXYGEN_GAS, QUANTITY_PH, QUANTITY_SALINITY, QUANTITY_RAW_DATA, QUANTITY_RAW_VOLTAGE, QUANTITY_RAW_DATA_2, QUANTITY_RAW_VOLTAGE_2, QUANTITY_MAGNETIC_FIELD, QUANTITY_LUNG_AIR_FLOW, QUANTITY_HEART_RATE_SIGNAL, QUANTITY_EKG, QUANTITY_BLOOD_PRESSURE, QUANTITY_CONDUCTIVITY, QUANTITY_DISSOLVED_OXYGEN, QUANTITY_COLORIMETER, QUANTITY_HAND_DYNAMOMETER };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

